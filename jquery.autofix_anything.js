// Generated by CoffeeScript 1.7.1

/*
 ===========================================================
 * jquery.autofix_anything.js v1
 * ===========================================================
 * Copyright 2013 Pete Rojwongsuriya.
 * http://www.thepetedesign.com
 *
 * Fix position of anything on your website automatically
 * with one js call
 *
 * https://github.com/peachananr/autofix_anything
 *
 * ==========================================================
 */
(function($, window) {
  var defaults;
  defaults = {
    customOffset: false,
    manual: false,
    onlyInContainer: true,
    container: null,
    parentOffset: 0
  };
  $.fn.autofix_anything = function(options) {
    var auto, container, el, fixAll, offset, resize, settings;
    settings = $.extend({}, defaults, options);
    el = $(this);
    el.data['curpos'] = el.position();
    offset = settings.customOffset;
    auto = 'auto';
    container = settings.container != null ? el.closest(settings.container) : el.parent();
    el.addClass('autofix_sb');
    resize = (function(_this) {
      return function() {
        el.data['curpos'] = el.position();
      };
    })(this);
    fixAll = function(el, settings, curpos) {
      var pos, top;
      pos = el.offset();
      if (el.outerHeight() >= container.outerHeight()) {
        return;
      }
      top = isNaN(settings.parentOffset) ? $(settings.parentOffset).outerHeight() : settings.parentOffset;
      if (settings.customOffset === false) {
        offset = container.offset().top - top;
      }
      if ($(document).scrollTop() > offset && $(document).scrollTop() <= (container.height() - el.outerHeight() + offset)) {
        el.removeClass('bottom').addClass('fixed').trigger('autofixed').css({
          top: "" + top + "px",
          left: pos.left,
          right: auto,
          bottom: auto
        });
      } else {
        if ($(document).scrollTop() > offset) {
          if (settings.onlyInContainer === true) {
            if ($(document).scrollTop() > (container.height() - el.outerHeight() + offset)) {
              el.addClass('bottom fixed').removeAttr('style').trigger('autofixed-bottom').css({
                left: curpos
              });
            } else {
              el.removeClass('bottom fixed').removeAttr('style').trigger('autofixed');
            }
          }
        } else {
          el.removeClass('bottom fixed').removeAttr('style').trigger('autofixed');
        }
      }
    };
    if (settings.manual === false) {
      $(window).on('scroll.autofix_anything, resize.autofix_anything', function() {
        fixAll(el, settings, el.data['curpos']);
      }).on('resize.autofix_anything', function() {
        resize();
      });
    }
  };

  /* 
  AUTOFIX_ANYTHING DATA-API
  =========================
   */
  $(window).on('load', function() {
    $('[data-spy="autofix_anything"]').each(function() {
      var $spy, data, key, options;
      $spy = $(this);
      data = $spy.data();
      options = {};
      for (key in defaults) {
        options[key] = data[key.toLowerCase()];
      }
      $spy.autofix_anything(options);
    });
  });
})(jQuery, window);
